package com.data.a1_common

/*
## Todo
    不就地修改数据，影响性能和空间使用？
    类型推断
    符号字面量，(P51)

## 说明
    无类型的脚本语言的替代者
    变量声明，类型在后边，类似于go等

?指针引用等用法，看起来容易混淆

## 整体

    1. 面向对象（构造大型系统及适应新需求） + 函数式编程（简化），加入到静态语言中的混合体
        1. 纯粹的面向对象，每个值都是对象，每个操作都是方法调用
        2. 函数式语言，主要理念：
                1）函数式头等值，函数也是值：简化了操作符的抽象，和新控制结构的创建；这样函数的泛化又很强的表现力，是程序清晰易懂的保证
                2）方法不应该有副作用：应该把输入映射为输出，而不是就地修改数据

    2. 静态类型的优势
        可检查的属性，可以消除运行时错误；安全的进行重构；

## 主要特点
    Scala 中的函数则是一个完整的对象，Scala 中的函数其实就是继承了 Trait 的类的对象
    函数可作为一个参数传入到方法中，而方法不行

    该方法在变量名和变量类型使用 => 符号来设置传名调用

## 语言
    ## 特点
        可以不指名类型，自行推断
        方便创造新的类型，看上去就像是语言內建的一样，无缝对接
        基于actor并发抽象（传递消息来通讯），类似于go的channel？
        代码简洁

    ## 简洁性
        类型推断
        分号可选；一行有多个语句时才是必须的
        执行结束时，可以不写return，类似于go
        构造函数，同时也定义了成员
        没有参数的函数，结尾可以不要括号
        函数
            函数返回值可以省略，系统能够推断的情况下（如果是递归使用，则必须指明）；写明返回值仍然是个好习惯 P18
            函数的参数无法推断，必须写明
            函数很短时，甚至可以去掉花括号，与def写在同一行

    ## 语法
        类型标注语法，类型在后边不是前边
        类中定义的成员，默认是public
        三元操作符是 if else
        没有操作符重载；而且所有操作符哦实际上都是方法调用 (24)
            如果操作符是:结尾（如： ::）那么是右操作数方法；其他情况下都是左操作数的方法

包括原生字符串，类似于python

    ## 灵活性
        函数可以指定默认值
        可以进行函数嵌套，定义内嵌函数
        import语句可以出现在任何地方，而不是只能在文件顶部
        可以以脚本的方式执行（只要文件已结果表达式结束即可）

    ## 风格
        用函数式的编程风格替换指令式风格，foreach
        使用val、不可变对象、没有副作用的方法
        方法短时尽量不适用花括号

    ## 使用
        可变集和不可变集合都有相同的方法，不同的是：可变集将变更加入到自身，不可变集合将创建并返回新的集合

    ## 类型系统
        类型推断系统很强，可以省略很多信息

## 语法
跨域多行时，需要：结尾是操作符，或者表达式用()括起来
定义变量时，除了类型之外，多加了一个 val（类似于java的final）、var

        ## 注意：
        Nil是空列表，不是null

    ## 与java不同
        类型系统：没有内置类型，所有的对象都是类；不像java那样搞两套类型系统
              但这行不会影响性能，在编译阶段可能也会转化为java的原始类型

        推断：能够进行类型推断
        性能：会转换为jvm字节码，性能与java一样
        简洁：代码可以少到java的1/10
        重用：重用java的所有方法
        语法：
            函数可以指定默认值

        库支持：
            Tuple

            对引用类型，== 比较的不是引用相等性；此语义在scala中是eq, P58
            不同类型的也可以比较；自动调用左操作数的equals方法（做操作数是null也可以）

        基本类型：
            使用了富包装器，给基本类型定义了更多的功能

            类定义更严格，主构造器、先决条件

            类定义简洁 P62
                直接带参数，作为类的成员；类中直接执行语句

                不同的类可以写在一起（最好还是分开定义）

赋值语句永远返回 unit，因此不用用在 while((x = next()))
不需要捕获检查异常？
match可以匹配字符串
与java不同，使用 => 不是 ->
去掉了break、continue

mkString
toString
        不同功能切面，可以分成若干特质，并灵活组合起来

    ## 新功能理念
        函数是对能产生值的表达式的定义
        函数柯里化
        定义 val、var
        支持元组

## 工程

加快编译：P44，fsc快速scala编译器

## Book
    默认：《scala编程》，1-13章有正版

## 资料
    https://www.w3cschool.cn/scaladevelopmentguide/14sl1jb0.html
    http://www.runoob.com/scala/scala-tutorial.html
    https://www.yiibai.com/scala/scala_overview.html#

*/
class a0_common {



}
